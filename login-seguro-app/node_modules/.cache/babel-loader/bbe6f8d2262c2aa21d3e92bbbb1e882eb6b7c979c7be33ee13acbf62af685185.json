{"ast":null,"code":"import React from'react';import{ChakraProvider}from'@chakra-ui/react';import{HashRouter as Router,Routes,Route,Navigate}from'react-router-dom';import Login from'./components/Login';import Profile from'./components/Profile';import{supabase}from'./lib/supabaseClient';import{Spinner,Center}from'@chakra-ui/react';// Componente para rutas protegidas\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=React.useState(null);React.useEffect(()=>{checkSession();},[]);const checkSession=async()=>{try{const{data:{session}}=await supabase.auth.getSession();setIsAuthenticated(!!session);}catch(error){console.error('Error checking session:',error);setIsAuthenticated(false);}};// Mientras verifica la autenticación\nif(isAuthenticated===null){return/*#__PURE__*/_jsx(Center,{h:\"100vh\",children:/*#__PURE__*/_jsx(Spinner,{size:\"xl\"})});}if(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};function App(){return/*#__PURE__*/_jsx(ChakraProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Profile,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})})});}export default App;","map":{"version":3,"names":["React","ChakraProvider","HashRouter","Router","Routes","Route","Navigate","Login","Profile","supabase","Spinner","Center","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ProtectedRoute","_ref","children","isAuthenticated","setIsAuthenticated","useState","useEffect","checkSession","data","session","auth","getSession","error","console","h","size","to","replace","App","path","element"],"sources":["/Users/Lenovo/Documents/GitHub/loginseguro/login-seguro-app/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Profile from './components/Profile';\nimport { supabase } from './lib/supabaseClient';\nimport { Spinner, Center } from '@chakra-ui/react';\n\n// Componente para rutas protegidas\nconst ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean | null>(null);\n\n  React.useEffect(() => {\n    checkSession();\n  }, []);\n\n  const checkSession = async () => {\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      setIsAuthenticated(!!session);\n    } catch (error) {\n      console.error('Error checking session:', error);\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Mientras verifica la autenticación\n  if (isAuthenticated === null) {\n    return (\n      <Center h=\"100vh\">\n        <Spinner size=\"xl\" />\n      </Center>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route\n            path=\"/profile\"\n            element={\n              <ProtectedRoute>\n                <Profile />\n              </ProtectedRoute>\n            }\n          />\n          {/* Ruta de fallback */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </Router>\n    </ChakraProvider>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,kBAAkB,CACjD,OAASC,UAAU,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAChF,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,OAASC,QAAQ,KAAQ,sBAAsB,CAC/C,OAASC,OAAO,CAAEC,MAAM,KAAQ,kBAAkB,CAElD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CACjE,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGtB,KAAK,CAACuB,QAAQ,CAAiB,IAAI,CAAC,CAElFvB,KAAK,CAACwB,SAAS,CAAC,IAAM,CACpBC,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAEC,IAAI,CAAE,CAAEC,OAAQ,CAAE,CAAC,CAAG,KAAM,CAAAlB,QAAQ,CAACmB,IAAI,CAACC,UAAU,CAAC,CAAC,CAC9DP,kBAAkB,CAAC,CAAC,CAACK,OAAO,CAAC,CAC/B,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CR,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED;AACA,GAAID,eAAe,GAAK,IAAI,CAAE,CAC5B,mBACER,IAAA,CAACF,MAAM,EAACqB,CAAC,CAAC,OAAO,CAAAZ,QAAA,cACfP,IAAA,CAACH,OAAO,EAACuB,IAAI,CAAC,IAAI,CAAE,CAAC,CACf,CAAC,CAEb,CAEA,GAAI,CAACZ,eAAe,CAAE,CACpB,mBAAOR,IAAA,CAACP,QAAQ,EAAC4B,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA,mBAAOtB,IAAA,CAAAE,SAAA,EAAAK,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,QAAS,CAAAgB,GAAGA,CAAA,CAAG,CACb,mBACEvB,IAAA,CAACZ,cAAc,EAAAmB,QAAA,cACbP,IAAA,CAACV,MAAM,EAAAiB,QAAA,cACLH,KAAA,CAACb,MAAM,EAAAgB,QAAA,eACLP,IAAA,CAACR,KAAK,EAACgC,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEzB,IAAA,CAACN,KAAK,GAAE,CAAE,CAAE,CAAC,cACtCM,IAAA,CAACR,KAAK,EACJgC,IAAI,CAAC,UAAU,CACfC,OAAO,cACLzB,IAAA,CAACK,cAAc,EAAAE,QAAA,cACbP,IAAA,CAACL,OAAO,GAAE,CAAC,CACG,CACjB,CACF,CAAC,cAEFK,IAAA,CAACR,KAAK,EAACgC,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEzB,IAAA,CAACP,QAAQ,EAAC4B,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAE,CAAE,CAAC,EAClD,CAAC,CACH,CAAC,CACK,CAAC,CAErB,CAEA,cAAe,CAAAC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}